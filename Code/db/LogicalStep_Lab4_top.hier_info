|LogicalStep_Lab4_top
Clkin_50 => Clock_Source:Clock_Selector.clk_input
Clkin_50 => segment7_mux:inst14.clk
pb_n[0] => Synch_Inverter2:inst1.input0
pb_n[1] => Synch_Inverter2:inst1.input1
pb_n[2] => Synch_Inverter2:inst1.input2
pb_n[3] => Synch_Inverter2:inst1.input3
sw[0] => XY_Register:inst6.target[0]
sw[1] => XY_Register:inst6.target[1]
sw[2] => XY_Register:inst6.target[2]
sw[3] => XY_Register:inst6.target[3]
sw[4] => XY_Register:inst5.target[0]
sw[5] => XY_Register:inst5.target[1]
sw[6] => XY_Register:inst5.target[2]
sw[7] => XY_Register:inst5.target[3]
leds[0] <= XY_Motion:inst9.error
leds[1] <= Grappler:inst11.grappler_on
leds[2] <= Bidir_shift_reg:inst2.REG_BITS[0]
leds[3] <= Bidir_shift_reg:inst2.REG_BITS[1]
leds[4] <= Bidir_shift_reg:inst2.REG_BITS[2]
leds[5] <= Bidir_shift_reg:inst2.REG_BITS[3]
leds[6] <= <GND>
leds[7] <= <GND>
seg7_data[0] <= segment7_mux:inst14.DOUT[0]
seg7_data[1] <= segment7_mux:inst14.DOUT[1]
seg7_data[2] <= segment7_mux:inst14.DOUT[2]
seg7_data[3] <= segment7_mux:inst14.DOUT[3]
seg7_data[4] <= segment7_mux:inst14.DOUT[4]
seg7_data[5] <= segment7_mux:inst14.DOUT[5]
seg7_data[6] <= segment7_mux:inst14.DOUT[6]
seg7_char1 <= segment7_mux:inst14.DIG1
seg7_char2 <= segment7_mux:inst14.DIG2


|LogicalStep_Lab4_top|Clock_Source:Clock_Selector
SIM_FLAG => clock_out.OUTPUTSELECT
clk_input => clock_out.DATAB
clk_input => \clk_divider:counter[0].CLK
clk_input => \clk_divider:counter[1].CLK
clk_input => \clk_divider:counter[2].CLK
clk_input => \clk_divider:counter[3].CLK
clk_input => \clk_divider:counter[4].CLK
clk_input => \clk_divider:counter[5].CLK
clk_input => \clk_divider:counter[6].CLK
clk_input => \clk_divider:counter[7].CLK
clk_input => \clk_divider:counter[8].CLK
clk_input => \clk_divider:counter[9].CLK
clk_input => \clk_divider:counter[10].CLK
clk_input => \clk_divider:counter[11].CLK
clk_input => \clk_divider:counter[12].CLK
clk_input => \clk_divider:counter[13].CLK
clk_input => \clk_divider:counter[14].CLK
clk_input => \clk_divider:counter[15].CLK
clk_input => \clk_divider:counter[16].CLK
clk_input => \clk_divider:counter[17].CLK
clk_input => \clk_divider:counter[18].CLK
clk_input => \clk_divider:counter[19].CLK
clk_input => \clk_divider:counter[20].CLK
clk_input => \clk_divider:counter[21].CLK
clk_input => \clk_divider:counter[22].CLK
clk_input => \clk_divider:counter[23].CLK
clock_out <= clock_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Synch_Inverter2:inst1
sync_clk => stages_pb0[0].CLK
sync_clk => stages_pb0[1].CLK
sync_clk => stages_pb1[0].CLK
sync_clk => stages_pb1[1].CLK
sync_clk => stages_pb2[0].CLK
sync_clk => stages_pb2[1].CLK
sync_clk => stages_pb3[0].CLK
sync_clk => stages_pb3[1].CLK
input3 => stages_pb3[0].DATAIN
input2 => stages_pb2[0].DATAIN
input1 => stages_pb1[0].DATAIN
input0 => stages_pb0[0].DATAIN
sync_reset <= stages_pb3[1].DB_MAX_OUTPUT_PORT_TYPE
sync_motion <= stages_pb2[1].DB_MAX_OUTPUT_PORT_TYPE
sync_extender <= stages_pb1[1].DB_MAX_OUTPUT_PORT_TYPE
sync_grappler <= stages_pb0[1].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bidir_shift_reg:inst2
CLK => sreg[0].CLK
CLK => sreg[1].CLK
CLK => sreg[2].CLK
CLK => sreg[3].CLK
RESET => sreg[0].ACLR
RESET => sreg[1].ACLR
RESET => sreg[2].ACLR
RESET => sreg[3].ACLR
CLK_EN => sreg[2].ENA
CLK_EN => sreg[1].ENA
CLK_EN => sreg[0].ENA
CLK_EN => sreg[3].ENA
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
REG_BITS[0] <= sreg[0].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[1] <= sreg[1].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[2] <= sreg[2].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[3] <= sreg[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:inst3
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET => ud_bin_counter[0].ACLR
RESET => ud_bin_counter[1].ACLR
RESET => ud_bin_counter[2].ACLR
RESET => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:inst4
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET => ud_bin_counter[0].ACLR
RESET => ud_bin_counter[1].ACLR
RESET => ud_bin_counter[2].ACLR
RESET => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XY_Register:inst5
clk => reg[0]~reg0.CLK
clk => reg[1]~reg0.CLK
clk => reg[2]~reg0.CLK
clk => reg[3]~reg0.CLK
target[0] => reg[0]~reg0.DATAIN
target[1] => reg[1]~reg0.DATAIN
target[2] => reg[2]~reg0.DATAIN
target[3] => reg[3]~reg0.DATAIN
reset => reg[0]~reg0.ACLR
reset => reg[1]~reg0.ACLR
reset => reg[2]~reg0.ACLR
reset => reg[3]~reg0.ACLR
Capture_XY => reg[0]~reg0.ENA
Capture_XY => reg[1]~reg0.ENA
Capture_XY => reg[2]~reg0.ENA
Capture_XY => reg[3]~reg0.ENA
reg[0] <= reg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[1] <= reg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[2] <= reg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[3] <= reg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XY_Register:inst6
clk => reg[0]~reg0.CLK
clk => reg[1]~reg0.CLK
clk => reg[2]~reg0.CLK
clk => reg[3]~reg0.CLK
target[0] => reg[0]~reg0.DATAIN
target[1] => reg[1]~reg0.DATAIN
target[2] => reg[2]~reg0.DATAIN
target[3] => reg[3]~reg0.DATAIN
reset => reg[0]~reg0.ACLR
reset => reg[1]~reg0.ACLR
reset => reg[2]~reg0.ACLR
reset => reg[3]~reg0.ACLR
Capture_XY => reg[0]~reg0.ENA
Capture_XY => reg[1]~reg0.ENA
Capture_XY => reg[2]~reg0.ENA
Capture_XY => reg[3]~reg0.ENA
reg[0] <= reg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[1] <= reg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[2] <= reg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg[3] <= reg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst7
var_A[0] => Compx1:INST4.INPUT_A
var_A[1] => Compx1:INST3.INPUT_A
var_A[2] => Compx1:INST2.INPUT_A
var_A[3] => Compx1:INST1.INPUT_A
var_B[0] => Compx1:INST4.INPUT_B
var_B[1] => Compx1:INST3.INPUT_B
var_B[2] => Compx1:INST2.INPUT_B
var_B[3] => Compx1:INST1.INPUT_B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst7|Compx1:INST1
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst7|Compx1:INST2
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst7|Compx1:INST3
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst7|Compx1:INST4
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst8
var_A[0] => Compx1:INST4.INPUT_A
var_A[1] => Compx1:INST3.INPUT_A
var_A[2] => Compx1:INST2.INPUT_A
var_A[3] => Compx1:INST1.INPUT_A
var_B[0] => Compx1:INST4.INPUT_B
var_B[1] => Compx1:INST3.INPUT_B
var_B[2] => Compx1:INST2.INPUT_B
var_B[3] => Compx1:INST1.INPUT_B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst8|Compx1:INST1
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst8|Compx1:INST2
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst8|Compx1:INST3
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Compx4:inst8|Compx1:INST4
INPUT_A => A_GREATER.IN0
INPUT_A => A_EQUAL_B.IN0
INPUT_A => B_GREATER.IN0
INPUT_B => B_GREATER.IN1
INPUT_B => A_EQUAL_B.IN1
INPUT_B => A_GREATER.IN1
A_GREATER <= A_GREATER.DB_MAX_OUTPUT_PORT_TYPE
A_EQUAL_B <= A_EQUAL_B.DB_MAX_OUTPUT_PORT_TYPE
B_GREATER <= B_GREATER.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XY_Motion:inst9
clk_input => current_state~1.DATAIN
reset => current_state~3.DATAIN
X_LT => Decoder_Section.IN0
X_EQ => Decoder_Section.IN0
X_EQ => Transition_Section.IN0
X_GT => Decoder_Section.IN0
motion => next_state.DATAA
motion => Transition_Section.IN0
motion => Selector0.IN4
motion => Decoder_Section.IN1
motion => Capture_XY.DATAB
motion => Decoder_Section.IN0
motion => Capture_XY.OUTPUTSELECT
motion => Selector3.IN4
motion => Decoder_Section.IN1
motion => Decoder_Section.IN1
motion => Decoder_Section.IN0
motion => Decoder_Section.IN0
motion => next_state.original_state.DATAB
motion => next_state.DATAA
motion => Transition_Section.IN0
Y_LT => Decoder_Section.IN1
Y_EQ => Decoder_Section.IN1
Y_EQ => Transition_Section.IN1
Y_GT => Decoder_Section.IN1
extender_out => Transition_Section.IN1
extender_out => Transition_Section.IN1
extender_out => Transition_Section.IN1
clk_en_X <= clk_en_X.DB_MAX_OUTPUT_PORT_TYPE
up_down_X <= up_down_X$latch.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE
Capture_XY <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
clk_en_Y <= clk_en_Y.DB_MAX_OUTPUT_PORT_TYPE
up_down_Y <= up_down_Y$latch.DB_MAX_OUTPUT_PORT_TYPE
extender_en <= extender_en$latch.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Extender:inst10
clk_input => current_state~1.DATAIN
reset => current_state~3.DATAIN
extender => Transition_Section.IN0
extender => Transition_Section.IN0
extender_en => Transition_Section.IN1
extender_en => Transition_Section.IN1
extender_en => Transition_Section.IN1
extender_en => Transition_Section.IN1
extender_en => Transition_Section.IN1
extender_en => Transition_Section.IN1
ext_pos[0] => Equal0.IN3
ext_pos[0] => Equal1.IN3
ext_pos[1] => Equal0.IN2
ext_pos[1] => Equal1.IN2
ext_pos[2] => Equal0.IN1
ext_pos[2] => Equal1.IN1
ext_pos[3] => Equal0.IN0
ext_pos[3] => Equal1.IN0
extender_out <= extender_out.DB_MAX_OUTPUT_PORT_TYPE
clk_en <= clk_en.DB_MAX_OUTPUT_PORT_TYPE
left_right <= left_right.DB_MAX_OUTPUT_PORT_TYPE
grappler_en <= grappler_en.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Grappler:inst11
clk_input => current_state~1.DATAIN
reset => current_state~3.DATAIN
grappler => Transition_Section.IN0
grappler => Transition_Section.IN0
grappler_en => Transition_Section.IN1
grappler_en => Transition_Section.IN1
grappler_on <= grappler_on.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:inst12
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:inst13
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|segment7_mux:inst14
clk => \clk_proc:COUNT[0].CLK
clk => \clk_proc:COUNT[1].CLK
clk => \clk_proc:COUNT[2].CLK
clk => \clk_proc:COUNT[3].CLK
clk => \clk_proc:COUNT[4].CLK
clk => \clk_proc:COUNT[5].CLK
clk => \clk_proc:COUNT[6].CLK
clk => \clk_proc:COUNT[7].CLK
clk => \clk_proc:COUNT[8].CLK
clk => \clk_proc:COUNT[9].CLK
clk => \clk_proc:COUNT[10].CLK
DIN2[0] => DOUT_TEMP.DATAB
DIN2[1] => DOUT_TEMP[1].DATAB
DIN2[2] => DOUT_TEMP.DATAB
DIN2[3] => DOUT_TEMP.DATAB
DIN2[4] => DOUT_TEMP.DATAB
DIN2[5] => DOUT_TEMP[5].DATAB
DIN2[6] => DOUT_TEMP[6].DATAB
DIN1[0] => DOUT_TEMP.DATAA
DIN1[1] => DOUT_TEMP[1].DATAA
DIN1[2] => DOUT_TEMP.DATAA
DIN1[3] => DOUT_TEMP.DATAA
DIN1[4] => DOUT_TEMP.DATAA
DIN1[5] => DOUT_TEMP[5].DATAA
DIN1[6] => DOUT_TEMP[6].DATAA
DOUT[0] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1].DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5].DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6].DB_MAX_OUTPUT_PORT_TYPE
DIG2 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE
DIG1 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE


